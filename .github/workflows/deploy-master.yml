name: Deploy adhocint.com (PM2 + rsync)

on:
  push:
    branches: [master]

concurrency: adhocint-deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install & build
        run: |
          npm ci
          npm run build

      - name: Prepare standalone bundle
        run: |
          set -e
          mkdir -p out_standalone
          # Next.js standalone server
          cp -r .next/standalone/* out_standalone/
          # Ensure target .next exists, then copy static assets
          mkdir -p out_standalone/.next
          cp -r .next/static out_standalone/.next/static
          # Optional public assets
          [ -d public ] && cp -r public out_standalone/public
          # PM2 config + placeholder uploads (symlinked on server)
          cp ecosystem.config.js out_standalone/
          mkdir -p out_standalone/uploads

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: Rsync upload to server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          set -e
          RSYNC_DEST="/var/www/adhocint.com/releases/${{ github.sha }}/"
          rsync -az --delete -e "ssh -o StrictHostKeyChecking=accept-new" \
            out_standalone/ "${SSH_USER}@${SSH_HOST}:${RSYNC_DEST}"

      - name: Activate release & PM2 reload (zero downtime)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            set -euo pipefail

            SITE=/var/www/adhocint.com
            REL="$SITE/releases/${{ github.sha }}"
            CUR="$SITE/current"
            SHARED="$SITE/shared"

            # link persistent env & uploads
            [ -f "$SHARED/.env" ] && ln -sfn "$SHARED/.env" "$REL/.env"
            rm -rf "$REL/uploads"
            ln -sfn "$SHARED/uploads" "$REL/uploads"

            # atomic switch
            ln -sfn "$REL" "$CUR"

            # start once; then hot reload (zero downtime)
            if pm2 describe adhocint >/dev/null 2>&1; then
              pm2 reload adhocint --update-env
            else
              pm2 start "$CUR/ecosystem.config.js"
              pm2 save
            fi
