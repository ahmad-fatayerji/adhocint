name: deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Prepare standalone bundle
        run: |
          rm -rf out_standalone
          mkdir -p out_standalone
          # copy standalone server
          cp -r .next/standalone/* out_standalone/
          # copy static build files
          cp -r .next/static out_standalone/.next/
          # ✅ copy public folder (fixes missing logo/images)
          [ -d public ] && cp -r public out_standalone/public
          # copy package.json if needed (for runtime deps)
          cp package.json out_standalone/

      - name: Upload via rsync
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete
          path: out_standalone/
          remote_path: /var/www/adhocint.com/releases/${{ github.sha }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_KEY }}

      - name: Activate release + restart pm2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            SITE=/var/www/adhocint.com
            CUR="$SITE/current"
            NEW="$SITE/releases/${{ github.sha }}"

            # point current to newest release
            ln -sfn "$NEW" "$CUR"
            ln -sfn "$SITE/shared/.env.local" "$CUR/.env.local"

            # pick entry (standalone server.js)
            if [ -f "$CUR/server.js" ]; then ENTRY="$CUR/server.js";
            elif [ -f "$CUR/.next/standalone/server.js" ]; then ENTRY="$CUR/.next/standalone/server.js";
            else echo "❌ no server.js in $CUR"; ls -la "$CUR"; exit 1; fi

            # pick PORT from .env.local (default 3001)
            PORT=$(grep -E '^PORT=' "$CUR/.env.local" | tail -n1 | cut -d= -f2- || true)
            [ -n "$PORT" ] || PORT=3001

            pm2 delete adhocint || true
            PORT="$PORT" HOST="127.0.0.1" NODE_ENV=production \
              pm2 start /usr/bin/node --name adhocint -- "$ENTRY"
            pm2 save

            # wait for port
            for i in $(seq 1 20); do ss -ltn | grep -q ":$PORT" && break; sleep 1; done
            ss -ltn | grep -q ":$PORT" && echo "✅ listening on :$PORT" || pm2 logs adhocint --lines 80
