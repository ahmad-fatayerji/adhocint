name: Deploy Production (master)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

concurrency:
  group: deploy-production
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js
        run: npm run build

      - name: Upload build to server (rsync, no tar)
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          REMOTE_PATH: /var/www/adhocint.com
        run: |
          echo "$DEPLOY_SSH_KEY" > key.pem
          chmod 600 key.pem
          # ensure target dir exists
          ssh -i key.pem -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "mkdir -p $REMOTE_PATH"
          # sync build outputs + runtime files (exclude repo junk)
          rsync -az --delete -e "ssh -i key.pem -o StrictHostKeyChecking=no" \
            --exclude .git --exclude node_modules \
            .next package.json package-lock.json public next.config.* tsconfig.json \
            $SERVER_USER@$SERVER_IP:$REMOTE_PATH/

      - name: Deploy remotely (pm2 reload or start)
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          REMOTE_PATH: /var/www/adhocint.com
        run: |
          echo "$DEPLOY_SSH_KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP <<EOF
            set -e
            cd "$REMOTE_PATH"
            npm ci --omit=dev
            pm2 describe adhocint >/dev/null 2>&1 && pm2 reload adhocint || pm2 start npm --name adhocint -- start
            pm2 save
          EOF

      - name: Cleanup keys
        if: always()
        run: rm -f key.pem
